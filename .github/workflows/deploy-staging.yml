name: Deploy staging

on:
  push:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - id: toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - run: rustup override set ${{steps.toolchain.outputs.name}}

      - name: cargo fmt
        uses: clechasseur/rs-cargo@v2
        with:
          command: fmt
          args: --all --check

      - name: cargo clippy
        uses: clechasseur/rs-clippy-check@v3
        with:
          args: --all --all-features

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blossomlabs/blobscan-indexer
          tags: |
            type=ref,event=branch

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_staging:
    name: Deploy (staging)
    runs-on: ubuntu-latest
    needs: docker
    environment: staging
    steps:
      - uses: appleboy/ssh-action@v0.0.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: deploy
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: ./deploy-blobscan-indexer.rs.sh
